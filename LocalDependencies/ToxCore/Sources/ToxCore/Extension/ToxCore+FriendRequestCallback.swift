//
//  ToxCore+FriendRequestCallback.swift
//
//
//  Created by Vitalii Sosin on 09.06.2024.
//

import Foundation
import ToxCoreCpp

// –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
/// –ö–ª–∞—Å—Å, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä—É–∑—å—è.
/// –°–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–º—ã–∫–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–æ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä—É–∑—å—è.
final class FriendRequestContext {
  /// –ó–∞–º—ã–∫–∞–Ω–∏–µ, –ø—Ä–∏–Ω–∏–º–∞—é—â–µ–µ –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –¥—Ä—É–≥–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ.
  var callback: (String, String) -> Void
  
  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –∑–∞–º—ã–∫–∞–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä—É–∑—å—è.
  /// - Parameter callback: –ó–∞–º—ã–∫–∞–Ω–∏–µ, –≤—ã–∑—ã–≤–∞–µ–º–æ–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä—É–∑—å—è.
  init(callback: @escaping (String, String) -> Void) {
    self.callback = callback
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
var globalConnectioFriendRequestContext: FriendRequestContext?

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä—É–∑—å—è
// –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —ç—Ç–æ C-—Ñ—É–Ω–∫—Ü–∏—è —Å @convention(c)
/// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–∞—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä—É–∑—å—è.
/// –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π Tox –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä—É–∑—å—è.
/// - Parameters:
///   - tox: –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –æ–±—ä–µ–∫—Ç Tox.
///   - publicKey: –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∑–∞–ø—Ä–æ—Å–∞.
///   - message: –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ –∫ –∑–∞–ø—Ä–æ—Å—É.
///   - length: –î–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
///   - userData: –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞.
let friendRequestCallback: @convention(c) (
  UnsafeMutablePointer<Tox>?,
  UnsafePointer<UInt8>?,
  UnsafePointer<UInt8>?,
  Int,
  UnsafeMutableRawPointer?
) -> Void = { tox, publicKey, message, length, userData in
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –Ω–µ —Ä–∞–≤–µ–Ω nil –∏ –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ø—É—Å—Ç–∏–º–∞ (–Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è)
  guard let publicKey = publicKey, length >= 0 else {
    print("üî¥ –û—à–∏–±–∫–∞: –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞.")
    return
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
  guard let context = globalConnectioFriendRequestContext else {
    print("üî¥ –û—à–∏–±–∫–∞: –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    return
  }
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤ Data
  let publicKeyData = Data(bytes: publicKey, count: Int(TOX_PUBLIC_KEY_SIZE))
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Data –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–æ –ø—É—Å—Ç–æ–µ
  let messageData: Data
  if length > 0, let message = message {
    messageData = Data(bytes: message, count: length)
  } else {
    messageData = Data()
  }
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω—É—é —Å—Ç—Ä–æ–∫—É
  let publicKeyHex = publicKeyData.map { String(format: "%02x", $0) }.joined()
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å—Ç—Ä–æ–∫—É UTF-8, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –ø—É—Å—Ç–æ–µ
  let messageStr = String(data: messageData, encoding: .utf8) ?? ""
  
  // –í—ã–∑—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ —Å –ø—É–±–ª–∏—á–Ω—ã–º –∫–ª—é—á–æ–º –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
  context.callback(publicKeyHex, messageStr)
}
